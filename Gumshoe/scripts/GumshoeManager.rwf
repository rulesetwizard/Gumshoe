<DocumentElement xmlns="http://tempuri.org/Ruleset.xsd">
  <Scripts>
    <ScriptName>GumshoeManager</ScriptName>
    <FolderID>0</FolderID>
    <Script>
function UseAbilityPool(rAbility, PCnode, bRecover)

	local abilityName = DB.getChild(rAbility, "name");
	local abilityPool = DB.getChild(rAbility, "pool");
	local abilityPoolValue = abilityPool.getValue();
	
	local message = '';
	if bRecover then
		message = Interface.getString("RecoverAbilityPool") ..  abilityName.getValue();
		abilityPool.setValue(abilityPoolValue + 1);
		ChatManager.Message(message, true, PCnode);
		return true;
	else
		if  abilityPoolValue &gt; 0 then
			message = Interface.getString("SpendAbilityPool") ..  abilityName.getValue();
			abilityPool.setValue(abilityPoolValue - 1);
			ChatManager.Message(message, true, PCnode);
			return true;
		else
			message = Interface.getString("CantSpendAbilityPool") ..  abilityName.getValue();
			ChatManager.Message(message, true, PCnode);
			return false;
		end
	end
end

function UseGeneralAbility(rAbility, testValue)

	local PCnode = rAbility.getChild('....');
	
	local abilityName = DB.getChild(rAbility, "name").getValue();
	local abilityPool = DB.getChild(rAbility, "pool");
	local abilityPoolValue = abilityPool.getValue();
	local abilityRatingValue = DB.getChild(rAbility, "rating").getValue()
	
	local message = '';
	
	if abilityRatingValue == 0 then
		if OptionsManager.isOption("FORGIVING", "no") then
			message = Interface.getString("UntrainedGeneralAbility") ..  abilityName;
			ChatManager.Message(message, true, PCnode);
			return false;
		end
	end
	
	local bAllowNegativePool = false;
	if abilityName == GumshoeData.getHealthAbility() or abilityName == GumshoeData.getStabilityAbility() then
		bAllowNegativePool = true;
	end
	
	if testValue &gt; abilityPoolValue and not bAllowNegativePool then
		message = Interface.getString("CantUseGeneralAbility") ..  abilityName;
		ChatManager.Message(message, true, PCnode);
		return false;
	else
		abilityPool.setValue(abilityPoolValue - testValue);
		return true;
	end
end

function UseNPCAbility(NPCNode, abilityName, poolNode, testNode)

	local abilityPoolValue = poolNode.getValue();
	local testValue = testNode.getValue();
	
	local message = '';
	
	if testValue &gt; abilityPoolValue and not bAllowNegativePool then
		message = Interface.getString("CantUseGeneralAbility") ..  abilityName;
		ChatManager.Message(message, true, PCnode);
		return false;
	else
		abilityPool.setValue(abilityPoolValue - testValue);
		return true;
	end
end

function getBuildPointsCost(w)
	local nodeWin = w.getDatabaseNode();
	local buildPointsType = nodeWin.getChild('buildPointsType').getValue();
	
	if buildPointsType == '' or buildPointsType == 'normal' then
		return nodeWin.getChild('rating').getValue();
	end

	if buildPointsType == 'half' then
		return math.ceil(nodeWin.getChild('rating').getValue() / 2);
	end

	if buildPointsType == 'exotic' then
		local rating = nodeWin.getChild('rating').getValue();
		if rating &lt;= 0 then
			return 0;
		else
			return 5 + (rating-1);
		end
	end

	if buildPointsType == 'firstfree' then
		local freepoints = nodeWin.getChild('customBuildPoints').getValue();
		local rating = nodeWin.getChild('rating').getValue();
		if rating &gt; freepoints then
			return rating - freepoints;
		else
			return 0;
		end
	end

	if buildPointsType == 'custom' then
		return nodeWin.getChild('customBuildPoints').getValue();
	end

	--Free
	return 0;
end

function getGeneralAbilityNode(NodeAbilities, abilityName)
	for _,ability in pairs(NodeAbilities.getChildren()) do
		if ability.getChild("name").getValue() == abilityName then
			return ability;
		end
	end
	
	return nil;
end

function onAttackResult(rSource, rTarget, rRoll)

    local rMessage = ActionsManager.createActionMessage(rSource, rRoll);
    if rTarget ~= nil then
        rMessage.text = rMessage.text .. " vs " .. rTarget.sName;
		local hitthreshold = DB.getChild(rTarget.sCreatureNode, "hitthreshold").getValue();
		if (rRoll.nTotal + rRoll.nMod) &gt;= hitthreshold then
			rMessage.text = rMessage.text .. " " .. Interface.getString("AttackHit");
			rMessage.icon = "roll_attack_hit";
		else
			rMessage.text = rMessage.text .. " " .. Interface.getString("AttackMiss");
			rMessage.icon = "roll_attack_miss";
		end
	else
			rMessage.icon = "roll_attack";
    end
	
    Comm.deliverChatMessage(rMessage);
	
end
</Script>
    <RegisterScript>true</RegisterScript>
    <Encoding />
  </Scripts>
</DocumentElement>